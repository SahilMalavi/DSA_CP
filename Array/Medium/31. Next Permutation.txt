class Solution {
    public static void swap(int[]nums,int i,int j){
        int temp=nums[i];
        nums[i]=nums[j];
        nums[j]=temp;
    }
    public static void reverse(int[] nums,int l,int r){
        while(l<r){
            swap(nums,l,r);
            l++;
            r--;
        }
    }
    public void nextPermutation(int[] nums) {
        int n=nums.length;
        
        //Find the first decreasing element from the right
        int i = n - 2;
        while (i >= 0 && nums[i] >= nums[i + 1]) {
            i--;
        }

        if (i >= 0) {
            // Find the element just larger than nums[i] on its right
            int j = n - 1;
            while (nums[j] <= nums[i]) {
                j--;
            }
            // Swap the two elements
            swap(nums, i, j);
        }

        //  Reverse the elements to the right of i (or the entire array if i < 0)
        reverse(nums, i + 1, n - 1);
    }
}